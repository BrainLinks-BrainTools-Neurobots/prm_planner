<launch>
	<rosparam command="load" ns="prm_planner" file="$(find prm_planner)/config/params.yaml" />
	<rosparam command="load" ns="prm_planner/problem_definitions" file="$(find prm_planner)/config/problems.yaml" />
	<rosparam command="load" ns="prm_planner/robots" file="$(find prm_planner)/config/robots.yaml" />

	<!-- If needed, broadcast static tf for robot root -->
	<!-- node pkg="tf" type="static_transform_publisher" name="virtual_joint_broadcaster_0" args="0 0 0 0 0 0 world omnirob/global_base_link_1 100" / -->
	<node pkg="tf" type="static_transform_publisher" name="virtual_joint_broadcaster_0" args="0 0 0 0 0 0 omnirob_full/global_base_link_1 map 100" />
	<node pkg="tf" type="static_transform_publisher" name="virtual_joint_broadcaster_1" args="0 0 0 0 0 0 omnirob_full/global_base_link_1 omnirob_full/interactive_marker_global_base_link_1 100" />
	<node pkg="tf" type="static_transform_publisher" name="virtual_joint_broadcaster_2" args="0 0 0 0 0 0 omnirob_full/global_base_link_1 omnirob_full/trajectory_global_base_link_1 100" />
	<node pkg="tf" type="static_transform_publisher" name="virtual_joint_broadcaster_3" args="0 0 0 0 0 0 iiwa_sdh2/base_link iiwa_sdh2/interactive_marker_base_link 100" />
	<node pkg="tf" type="static_transform_publisher" name="virtual_joint_broadcaster_4" args="0 0 0 0 0 0 iiwa_sdh2/base_link iiwa_sdh2/trajectory_base_link 100" />

	<!-- Given the published joint states, publish tf for the robot links -->
	<group ns="omnirob_full">
		<include file="$(find prm_planner)/launch/robots/omnirob_10d.launch.xml">
			<arg name="load_robot_description" value="true" />
			<arg name="robot_description" value="robot_description" />
		</include>
		<node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" respawn="true" output="screen">
			<param name="tf_prefix" type="string" value="omnirob_full" />
		</node>
		<param name="collision_matrix" type="string" value="$(find omnirob_description)/collision_matrices/omnirob_lbr_sdh2.cm" />
	</group>

	<group ns="iiwa_sdh2">
		<include file="$(find iiwa_sdh2_moveit_config)/launch/planning_context.launch">
			<arg name="load_robot_description" value="true" />
			<arg name="robot_description" value="robot_description" />
		</include>
		<node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" respawn="true" output="screen">
			<param name="tf_prefix" type="string" value="iiwa_sdh2" />
		</node>
		<param name="collision_matrix" type="string" value="$(find iiwa_description)/collision_matrices/iiwa_sdh2.cm" />
	</group>

	<node name="rviz" pkg="rviz" type="rviz" respawn="false" args="-d $(find prm_planner)/config/omnirob_iiwa_tray.rviz" output="screen"></node>

	<include file="$(find realtime_urdf_filter)/launch/realtime_urdf_filter_omnirob_full_and_iiwa_sim.launch"></include>

	<node name="sdh2_iiwa_publisher" pkg="lbr_vrep_interface" type="kuka_sdh_interface" args="iiwa iiwa_sdh2 iiwa_sdh2" />
	<node name="sdh2_omnirob_publisher" pkg="lbr_vrep_interface" type="kuka_sdh_interface" args="omnirob omnirob_full omnirob_full" />
</launch>